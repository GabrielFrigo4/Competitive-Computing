* Apostila
Apostila para a *Maratora de Programação*
Fontes: ([[https://youkn0wwho.academy/topic-list][topic-list]], [[https://noic.com.br/materiais-informatica/curso/][noic-cursors]], [[https://cp-algorithms.com/][cp-algorithms]], [[https://projecteuler.net/archives][project-euler]])

* Configuração
Nessa capitulo temos os códigos de configuração para o =Vim= e para o =Emacs=

** Vim
*Configuração Básica* do =Vim= _~/.vimrc_, _~/\under{}vimrc_, _~/vimfiles/vimrc_
#+BEGIN_SRC vimrc
syntax on filetype on indent on
set nocp nu rnu noet sts=4 sw=4 ts=4
set bs+=indent,eol,start
set ww+=<,>,h,l,[,]
let &t_SI = "\<Esc>[5 q"
let &t_SR = "\<Esc>[3 q"
let &t_EI = "\<Esc>[1 q"
au BufNewFile *.cpp 0r template.cpp
au BufNewFile *.py 0r template.py
#+END_SRC

** Emacs
*Configuração Básica* do =Emacs= _~/.emacs_, _~/.emacs.d/init.el_
#+BEGIN_SRC elisp
(custom-set-variables
 '(inhibit-startup-screen t)
 '(column-number-mode t)
 '(global-display-line-numbers-mode t)
 '(display-line-numbers-type 'relative)
 '(custom-enabled-themes '(wombat))
 '(auto-insert-mode t)
 '(auto-insert-query nil)
 '(auto-insert-directory "~")
 '(font-lock-maximum-decoration 't)
 '(c-default-style "user"))
(define-auto-insert "\\.cpp\\'" "template.cpp")
(define-auto-insert "\\.py\\'" "template.py")
#+END_SRC

* Templates
Nessa capitulo temos os códigos de template para o =C++= e para o =Python=

** C++
*Template Básico* de =C++= para o =G++=
#+BEGIN_SRC c++
#include <bits/stdc++.h>
#define int long long
#define vec vector
using namespace std;

void task() {
	return;
}

signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);

	int t = 1;
	//cin >> t;
	while (t--) {
		task();
	}
}
#+END_SRC

** Python
*Template Básico* de =Python= para o =PyPy=
#+BEGIN_SRC python
import sys
sys.setrecursionlimit(10**7)

def task():
	pass

def main():
	t = 1
	#t = int(input())
	for _ in range(t):
		task()

main()
#+END_SRC
